/*11057번 오르막 수
오르막수는 수의 자리가 오름차순을 이루는 수를 말한다. 
(22234, 3678, 1119 등)
자리수 n이 주어졌을때, 그 자리수에 해당하는 오르막수의 개수를 출력하는 문제
점화식안에 -가 들어가게 식을 세워서, 
%10007을 한 값이 저장된 후 다시 올라갔을 때, 뒷자리값이 모드10007한 값보다 클 경우
결과값이 음수가 되는 난해한 현상이 생겨서 아예 새롭게 점화식을 다시 세웠다.
dp[i][j] = dp[i-1][j]+dp[i][j-1] 의 점화식을 세웠다.
i개의 자리수의 수중 맨 마지막 자리의 수가 j인 경우의 오르막 수의 개수는
i-1개의 자리수중 맨 마지막 자리의 수가 j인 경우의 수 더하기
i개의 자리수 중 맨마지막 자리의 수가 j-1인 경우의 수를 더한 값과 같다*/

#include <iostream>
using namespace std;

int dp[1001][10];
int result;

int main() {
	int n;
	scanf("%d", &n);

	for (int i = 0; i < 10; i++) {
		dp[1][i] = 1;
	}
	for (int i = 2; i <= n; i++) {
		for (int j = 0; j < 10; j++) {
			if (j == 0)
				dp[i][j] = dp[i - 1][j]%10007;
			else {
				dp[i][j] = (dp[i - 1][j] + dp[i][j - 1])%10007;
			}
		}
	}
	for (int i = 0; i < 10; i++) {
		result = (result+dp[n][i])%10007;
	}
	printf("%d", result%10007);

	return 0;
}